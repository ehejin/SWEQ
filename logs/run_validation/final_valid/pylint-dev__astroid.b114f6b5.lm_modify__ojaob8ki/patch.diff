diff --git a/astroid/raw_building.py b/astroid/raw_building.py
index c1f7ec1..e21c71e 100644
--- a/astroid/raw_building.py
+++ b/astroid/raw_building.py
@@ -592,9 +592,6 @@ def _set_proxied(const) -> nodes.ClassDef:
 
 
 def _astroid_bootstrapping() -> None:
-    """astroid bootstrapping the builtins module"""
-    # this boot strapping is necessary since we need the Const nodes to
-    # inspect_build builtins, and then we can proxy Const
     builder = InspectBuilder()
     astroid_builtin = builder.inspect_build(builtins)
 
@@ -610,10 +607,8 @@ def _astroid_bootstrapping() -> None:
             assert isinstance(proxy, nodes.ClassDef)
         if cls in (dict, list, set, tuple):
             node_cls._proxied = proxy
-        else:
-            _CONST_PROXY[cls] = proxy
+        _CONST_PROXY[cls] = proxy
 
-    # Set the builtin module as parent for some builtins.
     nodes.Const._proxied = property(_set_proxied)
 
     _GeneratorType = nodes.ClassDef(
@@ -720,9 +715,6 @@ def _astroid_bootstrapping() -> None:
 
     InspectBuilder.bootstrapped = True
 
-    # pylint: disable-next=import-outside-toplevel
     from astroid.brain.brain_builtin_inference import on_bootstrap
 
-    # Instantiates an AstroidBuilder(), which is where
-    # InspectBuilder.bootstrapped is checked, so place after bootstrapped=True.
-    on_bootstrap()
+    on_bootstrap()
\ No newline at end of file
